version: '3'

services:

  py_bot:
    build:
      context: ./api
      dockerfile: Dockerfile
    #restart: always
    container_name: py_bot
    command: python3 api.py
    ports:
      - "12000:12000"
    volumes:
      - ./api:/flask-app
    networks:
      - app-network

  nodejs:
    build:
      context: ./server
      dockerfile: Dockerfile
    #restart: always
    image: nodejs
    container_name: nodejs
    restart: unless-stopped
    env_file: .env
    environment:
      - API_URL=$API_URL
      - MONGO_USERNAME=$MONGO_USERNAME
      - MONGO_PASSWORD=$MONGO_PASSWORD
      - MONGO_HOSTNAME=db
      - MONGO_PORT=$MONGO_PORT
      - MONGO_DB=$MONGO_DB
    ports:
      - "10000:10000"
    volumes:
      - ./server:/node-app
      - ./server/node_modules:/node-app/node_modules
    networks:
      - app-network
    command: ./wait-for.sh db:27017 -- node server.js
    depends_on:
      - py_bot

  db:
    image: mongo:4.1.8-xenial
    container_name: db
    restart: unless-stopped
    env_file: .env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$MONGO_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD=$MONGO_PASSWORD
    volumes:
      - dbdata:/data/db
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  dbdata:
  node_modules:
